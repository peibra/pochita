import numpy as np
from PIL import Image, ImageDraw

pochita_svg = "M 1051.7 642.629 C 926.342 637.998 839.823 613.82 733.939 609.188 C 628.055 604.557 590.451 646.014 590.451 646.014 L 554.024 737.836 L 580.309 814.449 L 651.801 877.228 L 952.103 911.038 L 922.694 945.347 C 867.554 913.488 879.807 920.84 879.807 920.84 L 836.92 946.573 L 809.962 909.812 L 754.822 934.319 L 721.738 901.235 L 672.724 920.84 L 639.639 896.333 L 593.076 902.46 L 588.175 855.897 L 542.837 839.968 L 552.64 789.728 L 509.753 760.32 L 533.034 717.433 L 520.781 670.87 L 559.992 657.391 L 562.443 604.701 L 600.428 614.504 L 616.358 572.842 L 649.442 586.321 L 688.653 545.885 L 710.71 587.546 L 738.892 553.237 L 762.174 585.096 L 812.413 558.138 L 832.019 592.448 L 877.356 558.138 L 892.061 596.124 L 942.3 570.392 L 959.455 601.025 L 1003.57 585.096 L 1028.07 614.504 L 1059.93 588.772 L 1070.62 621.026 C 1070.62 621.026 1160 569.798 1239.57 588.327 C 1319.13 606.857 1526.23 497.86 1930.61 824.85 C 2053.17 923.961 2088.98 770.926 2134.82 728.248 C 2169.82 695.654 2160.72 682.834 2151.99 666.15 C 2134.46 632.602 2079.45 615.355 2114.48 613.798 C 2208.75 609.608 2268.27 571.262 2197.24 672.08 L 2176.13 651.632 L 2205.51 621.748 L 2146.24 628.223 C 2146.24 628.223 2182.1 646.652 2182.1 679.524 C 2182.1 712.397 2125.32 779.138 2049.12 893.196 C 2033.3 916.877 2007.51 928.871 1997.1 946.427 C 1957.37 1013.43 1926.09 1097.41 1926.09 1097.41 C 1926.09 1097.41 1966.94 1097.41 1980.38 1067.52 C 1993.83 1037.64 2011.76 995.301 2011.76 995.301 L 2002.3 956.949 L 2033.18 924.575 L 2092.45 976.374 C 2092.45 976.374 2068.54 1138.74 2024.71 1154.19 C 1980.88 1169.63 1909.16 1162.65 1904.68 1157.67 C 1900.2 1152.69 1929.08 1101.89 1929.08 1101.89 L 1888.24 1155.18 C 1888.24 1155.18 1883.26 1251.81 1910.16 1246.83 C 1937.05 1241.85 1957.18 1252.32 1958.84 1271.51 C 1960.51 1290.7 1913.78 1362.47 1948 1366.64 C 1982.21 1370.82 1870.29 1429.58 1824.07 1523.43 C 1808.21 1555.63 1812.92 1498.23 1812.92 1498.23 C 1768.72 1531.15 1773.41 1498.01 1787.53 1480.36 C 1806.34 1456.85 1762.13 1471.9 1762.13 1471.9 C 1762.13 1471.9 1747.08 1486.01 1774.36 1438.04 C 1801.63 1390.08 1795.05 1385.37 1798.81 1359.04 C 1802.57 1332.7 1653.97 1232.07 1694.42 1156.83 C 1734.86 1081.59 1677.49 1209.5 1677.49 1209.5 C 1677.49 1209.5 1563.68 1261.23 1558.04 1234.89 C 1552.4 1208.56 1542.99 1195.39 1542.99 1195.39 C 1542.99 1195.39 1561.8 1237.71 1563.68 1271.57 C 1565.57 1305.43 1547.7 1431.46 1530.77 1447.45 C 1513.84 1463.44 1388.75 1551.84 1388.75 1551.84 L 1396.27 1517.04 L 1353.01 1555.61 C 1353.01 1555.61 1341.72 1535.86 1365.24 1514.22 C 1388.75 1492.59 1320.09 1552.78 1325.74 1525.51 C 1331.38 1498.23 1384.05 1479.42 1397.21 1436.16 C 1410.38 1392.9 1380.28 1262.17 1381.23 1245.24 C 1382.17 1228.31 1370.88 1281.92 1403.8 1271.57 C 1436.72 1261.23 1424.49 1280.04 1298.46 1276.27 C 1221.75 1273.98 1145.12 1261.24 1093.95 1247.17 C 1061.04 1238.12 1035.36 1228.51 1037.94 1220.78 C 1040.25 1213.84 996.556 1280.04 956.492 1306.97 C 917.502 1333.18 1025.26 1297.21 973.082 1326.46 C 946.909 1341.13 937.896 1351.89 999.361 1338.39 C 1015.29 1334.89 955.486 1371.02 973.381 1365.98 C 979.136 1364.35 1024.91 1360.8 1069.18 1346.1 C 1128.8 1326.31 1175.04 1276.09 1183.72 1273.45 C 1191.35 1271.14 977.042 1228.51 931.661 1122.97 C 891.219 1028.92 873.294 905.614 895.611 949.345 C 920.35 997.821 975.015 943.604 979.496 940.02 C 983.977 936.435 931.552 981.242 928.416 991.548 C 925.279 1001.85 911.837 974.073 911.837 974.073 C 911.837 974.073 926.121 1043.71 966.317 1041.28 C 1003.51 1039.04 1023.33 1040.44 1063.66 977.708 C 1077.12 956.762 1132.2 958.251 1151.42 942.155 C 1203.57 898.462 1250.97 915.96 1272.37 863.641 C 1304.5 785.095 1226.67 756.532 1220.24 757.246 C 1213.82 757.96 1140.27 754.39 1138.13 851.502 C 1137.47 881.083 1192.14 880.635 1214.27 860.782 C 1244.52 833.651 1204.37 761.761 1168.12 796.52 C 1115.99 846.504 1160.78 885.982 1170.22 887.236 C 1273.26 900.924 1136.82 943.083 1136.82 943.083 C 1136.82 943.083 1086.49 932.38 1079.88 945.2 C 1073.28 958.02 1043.54 982.445 1032.66 986.718 C 1021.78 990.992 1048.52 947.192 1048.52 947.192 L 1082.17 938.619 C 1082.17 938.619 1053.57 945.25 1024.43 953.408 C 995.296 961.566 957.224 915.336 958.778 895.523 C 960.332 875.711 911.771 740.446 1071.83 635.236 C 1114.64 607.095 1154.81 602.57 1179.23 581.09 C 1212.98 551.4 1251.42 481.077 1272.33 472.581 C 1294.23 463.682 1420.95 490.905 1394.91 522.825 C 1368.87 554.745 1297.05 681.585 1298.73 688.725 C 1300.41 695.865 1345.77 723.585 1365.93 723.165 C 1386.09 722.745 1485.21 581.625 1499.49 556.005 C 1513.77 530.385 1524.55 501.758 1513.31 487.562 C 1502.07 473.365 1277.89 388.189 1244.77 395.287 C 1233.18 397.77 1212.97 391.333 1200.71 400.659 C 1177.96 417.984 1116.41 540.206 1108.72 554.993 C 1101.03 569.781 1090.07 601.824 1064.86 621.126 C 1055.7 628.146 1085.13 643.864 1051.7 642.629 Z"

pochita0 = pochita_svg.split()


def calc_bezier(p, t):
    return ((1-t)**3)*p[0] + 3*((1-t)**2)*t*p[1] + 3*(1-t)*(t**2)*p[2] + (t**3)*p[3]


pochita = []

for i, value in enumerate(pochita0):
    if value == 'M' or value == 'L':
        pochita.append(pochita0[i+1])
        pochita.append(pochita0[i+2])
    if value == 'C':
        p = [pochita0[i-2],
             pochita0[i-1], *pochita0[i+1:i+7]]
        p = [float(num) for num in p]
        p = np.reshape(p, (4, 2))
        for j in range(5):
            pochita.extend(calc_bezier(p, j/5))
    if value == 'Z':
        pochita.append(pochita[0])
        pochita.append(pochita[1])

pochita = [float(num) for num in pochita]

n = int(len(pochita)/2)

pochita = np.reshape(pochita, (n, 2))

avr = np.average(pochita, axis=0)

for i, _ in enumerate(pochita):
    pochita[i] = pochita[i] - avr

pochita_complex = [0] * len(pochita)

for i, point in enumerate(pochita):
    pochita_complex[i] = point[0] + 1j * point[1]

F = np.fft.fft(pochita_complex) / len(pochita_complex) / 3

N = len(F)

(width, height) = (900, 600)
centers = [0] * N
centers[0] = (width/2, height/2)

images = []
pochita_outline = []

for _ in range(N):
    img = Image.new("RGBA", (width, height), "White")
    draw = ImageDraw.Draw(img)

    for i, coeff in enumerate(F[1:]):
        r = abs(coeff)
        centers[i+1] = (centers[i][0]+coeff.real, centers[i][1]+coeff.imag)

        circle_topleft = (centers[i][0]-r, centers[i][1]-r)
        circle_bottomright = (centers[i][0]+r, centers[i][1]+r)

        draw.ellipse([circle_topleft, circle_bottomright],
                     outline=(200, 200, 200, 1), width=1)
        draw.line([centers[i], centers[i+1]],
                  fill=(200, 200, 200, 1), width=1)

    pochita_outline.append(centers[-1])

    draw.line(pochita_outline, fill='orange', width=2)

    images.append(img)

    F = [c * np.exp(1j * 2*np.pi*i/N) for i, c in enumerate(F)]

images[0].save('pochita.gif', save_all=True,
               append_images=images[1:], optimizer=False, duration=0, loop=0)
